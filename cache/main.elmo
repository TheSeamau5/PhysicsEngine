Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _E = _N.Error.make(_elm),
   _J = _N.JavaScript.make(_elm),
   $moduleName = "Main";
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var Keyboard = Elm.Keyboard.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Physics = Physics || {};
   Physics.Body = Elm.Physics.Body.make(_elm);
   var Physics = Physics || {};
   Physics.Collider = Elm.Physics.Collider.make(_elm);
   var Physics = Physics || {};
   Physics.Math = Physics.Math || {};
   Physics.Math.Point = Elm.Physics.Math.Point.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var _op = {};
   var makeScene = A2(Graphics.Collage.collage,
   400,
   400);
   var tolist = A2(Basics.flip,
   F2(function (x,y) {
      return {ctor: "::"
             ,_0: x
             ,_1: y};
   }),
   _J.toList([]));
   var drawGameObject = function (gameObject) {
      return A2(Graphics.Collage.move,
      {ctor: "_Tuple2"
      ,_0: gameObject.collider.center.x
      ,_1: gameObject.collider.center.y},
      A2(Graphics.Collage.filled,
      gameObject.color,
      A2(Graphics.Collage.rect,
      gameObject.collider.width,
      gameObject.collider.height)));
   };
   var drawScene = function ($) {
      return makeScene(List.map(drawGameObject)($));
   };
   var gameObject = F3(function (collider,
   body,
   color) {
      return {_: {}
             ,body: body
             ,collider: collider
             ,color: color};
   });
   var squareObject = F5(function (color,
   mass,
   center,
   width,
   height) {
      return A3(gameObject,
      A3(Physics.Collider.collider,
      center,
      width,
      height),
      A3(Physics.Body.dynamicBody,
      mass,
      center,
      Physics.Math.Point.origin),
      color);
   });
   var hero = A5(squareObject,
   Color.green,
   30,
   Physics.Math.Point.origin,
   50,
   50);
   var evil = A5(squareObject,
   Color.red,
   30,
   A2(Physics.Math.Point.point,
   100,
   0),
   50,
   50);
   var main = drawScene(_J.toList([hero
                                  ,evil]));
   var GameObject = F3(function (a,
   b,
   c) {
      return {_: {}
             ,body: b
             ,collider: a
             ,color: c};
   });
   _elm.Main.values = {_op: _op
                      ,gameObject: gameObject
                      ,drawGameObject: drawGameObject
                      ,tolist: tolist
                      ,makeScene: makeScene
                      ,drawScene: drawScene
                      ,squareObject: squareObject
                      ,hero: hero
                      ,evil: evil
                      ,main: main
                      ,GameObject: GameObject};
   return _elm.Main.values;
};